#!/usr/bin/env bash
#
# Automatic OCR Service
#
# chkconfig: 35 55 25
# description: monitors a local directory and ocrs any file and deletes the source file
#              and only keep the ocred version
# processname: /usr/local/bin/pmocr.sh
# pidfile: /var/run/pmocr

### BEGIN INIT INFO
# Provides:             pmocr-srv
# Required-Start:       $local_fs $time
# Required-Stop:        $local_fs $time
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    pmocr daemon
# Description:          OCR wrapper service
### END INIT INFO

prog=pmocr
progexec=pmocr.sh
progpath=/usr/local/bin
pidfile=/var/run/$prog
SCRIPT_BUILD=2015091701


if [ ! -f $progpath/$progexec ] && [ ! -f $progexec ]; then
	echo "Cannot find $prog executable in $progpath nor in local path."
	exit 1
fi

if [ ! -w $(dirname $pidfile) ]; then
	pidfile=./$prog
fi

start() {
		if [ -f $progpath/$progexec ]; then
			$progpath/$progexec --service > /dev/null 2>&1 &
		else
			echo "Cannot find $prog executable in $progpath"
			exit 1
		fi

		pid=$!
		retval=$?

		if [ $? == 0 ]; then
			echo $pid > "$pidfile"
			echo "$prog successfully started" 
		else
			echo "Cannot start $prog"
			errno = 1
		fi

	exit $errno
}

stop() {
	if [ ! -f $pidfile ]; then
		echo "No running $prog instances found."
		exit 1
	fi

	if ps -p$(cat $pidfile) > /dev/null 2>&1; then
		kill -TERM $(cat $pidfile)
		if [ $? == 0 ]; then
			rm -f $pidfile
			echo "$prog instance $(basename $pidfile) stopped."
		else
			echo "Cannot stop $prog instance $(basename $pidfile)"
		fi
	else
		rm -f $pidfile
		echo "$prog (pid $(cat $pidfile)) is dead."
	fi
}

status() {
	if [ ! -f $pidfile ]; then
		echo "Cannot find any running $prog instance."
		exit 1
	fi

	errno=0

	if ps -p$(cat $pidfile) > /dev/null 2>&1; then
		echo "$prog instance $(basename $pidfile) is running (pid $(cat $pidfile))"
		return 0
	else
		echo "$prog (pid $(cat $pidfile)) is dead."
		errno=1
	fi

	exit $errno
}

case "$1" in
	start)
	start
	;;
	stop)
	stop
	;;
	restart)
	stop
	start
	;;
	status)
	status
	;;
	condrestart|try-restart)
	status || exit 0
	restart
	;;
	*)
	echo "Usage: $0 {start|stop|restart|status}"
	;;
esac

exit 0
